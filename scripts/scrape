#!/usr/bin/env python3

import requests, sys, os, json
from termcolor import colored
from bs4 import BeautifulSoup, element

if len(sys.argv) < 3:
    print("Usage: scrape <day> <cmd> [<args..>]")
    sys.exit(1)

day = int(sys.argv[1])
cmd = sys.argv[2]
cmdargs = None if len(sys.argv) == 3 else sys.argv[3:]

year = "2020"
colortext = True
reporoot = os.getenv("REPOROOT")
headers = json.loads(open(f"{reporoot}/data/headers").read())
baseurl = f"https://adventofcode.com/{year}/day/{day}"

def scrape_input(day):
    path = f"{reporoot}/day{day}/input"
    if os.path.exists(path):
        sys.exit(1)

    r = requests.get(f"{baseurl}/input", headers = headers)

    if r.status_code != 200:
        sys.exit(1)

    with open(path, "w+") as f:
        f.write(r.text)

def extract_hltext(elem):
    text = ""
    for ce in elem:
        if ce.name == "em":
            if not ce.get("class"):
                text += colored(ce.text, "white", attrs=["bold"])
            elif "star" in ce.get("class"):
                text += colored(ce.text, "yellow", attrs=["bold"])
            else:
                text += colored(ce.text, "magenta", attrs=["bold"])
        elif type(ce) == element.NavigableString:
            text += str(ce)
        elif ce.name == "li":
            text += " - " + extract_hltext(ce)
        elif ce.name[0] == "h":
            text += ce.text + "\n\n"
        elif ce.name == "p" or ce.name == "ul":
            text += extract_hltext(ce) + "\n"
        else:
            text += extract_hltext(ce)
    return text

def scrape_text(day, part):
    path = f"{reporoot}/day{day}/part{part}"
    if os.path.exists(path):
        sys.exit(1)

    r = requests.get(baseurl, headers = headers)
    soup = BeautifulSoup(r.text, "html.parser")

    textobj = soup.select("article.day-desc")[part - 1]

    with open(path, "w+") as of:
        of.write("{}\n".format(extract_hltext(textobj)))

def main():
    if cmd == "input":
        scrape_input(day)
    elif cmd == "text":
        part = int(cmdargs[0]) if cmdargs else 1
        scrape_text(day, part)
    else:
        sys.exit(1)

main()
